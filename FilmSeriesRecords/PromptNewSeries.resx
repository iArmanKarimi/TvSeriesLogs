<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSubmit.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        dAAAEnQB3mYfeAAABKRJREFUeF7tm1+IFVUcx6/UgwWW/aN8NgSphwgkKKM1xOXeu3PvzMZ4dSmwiBDC
        JXzsoZQl13/BRiLqi4oKcWHvvfvffKiHpF4qejBkTSpYtXrI1VXwpXb6/u7+RsbZ396ZuTNzZuzOFz7s
        Ze+c3/l9z5xz5szMublMmTJlyqRA3VXzca1mvA76exrlQ8W6flxr6FWCPvP/dhRHShuK48XHuNj9K7Nq
        PqDV9TyMHYOxn3vq+jywfDJPZVD+aLFR7qZYHDb9MmrGEzCwq6dmXHGZCsMM+Jh6EVeTPm2smo8iyX3g
        FicdB3NgT2mktIKrTYe0RrkP3fWaK9k4uYqhVeHqkxN1SSQz6kpOHTVjJLFhUawZa3HWL4uJqWW6UDPW
        cFpqhJn5VVQ860okSa7j8rqe04tXhUb5JVQY50TXLnPacO86TjMeoYIXUdFNV8WpAUPyRqGuv8DpRiu9
        rq9EJb+6K00hv+Qn849w2hHJyi1D4AlXRWlmjHLm7MMLXestoZJUg6vUFk4/nLQx7UkE/NtdwX3AX5Hc
        VOHsHxSCJ4o5blrvfvWm+N09NMqDbKM9dQ/3rkKQO2LwhNgytdmamttjffvPp9aOb94Wj3FwO181n2I7
        wYUFz24haGKQ+bMw/7011OQ7aoTz28RjbbBA+ojtBFPX110PIsCf7oBJsdVl3tkI/edb9ATclrf1PAFd
        vyAGTABzwrTGbwwsMm9z8OIHYjkbzGOb2JZ/4TJyRAqmmqXOvM3eC/1iORefsy3/QqFLriDKIfNf3gpt
        nq4GF9mWPxWq5jNiIIVsnapEY36B+UBXA8z+G4UgyojYfBN62sz2vIWZ830piAriMN+kZmxne97CmNkv
        BomZ2MwTQVaF7V4BaIl6YuZDqzK5Wfy+FZVJ05q4+YlonBia3imW8wsuhYfZnrfQWqelIK2wl6iU7Lnb
        g1bf2Yp4nMTCmR9cZNom1Jln0ACn2J63UOCMO0ArnOZt/DZCnwLzTXBS2Z63ggwBY/QNa3RWXqVRo1Dj
        SOUIGipTc/F1eydBh0CgSZCWopIBYqmeoOzMM7gp2sv2vEWXDClIK4I0gmrzRLGuv8f2vEWLBimIF34a
        gVBtnkAPeI3teas0UnoahYK8zr7L0KWdojGC5gT3ZOkkyjHvIthSmIRhcEEI5ItWPWEp4jrzzE9sy78w
        ER4SAvkmSCPEbJ4YYlv+RWNGCBQIP42gwLyFm7uX2VYALbwMCf0mqFUjqDAPptlRcEX1UFRqBEXm238o
        SuINELQtRQweBGcjqDIPZkO/J4zyxQg1AiF9FwthX4yQaEMSPVoWK0gxWPn9po1pD7ONcEIv6NyXo7bo
        flqqKJXUjJOcdnTq7A0SLMwHz2Ji+UOoNBWgl17L1/XVnG486uhNUrYwwTyfsivDjDaqPcfpqREaoXM3
        Stoyq+ZDaISjQlJqaJQ/6zq+bTmnk5w6drO0Ux29Xd6puz+YqOu/c9KhaS5rcVeX6h9MLJKVW4ak12No
        0M3Uj+BfpykP6NgfMNEeaD7MiHLTY1KiPXul4d5XYOodmBtAwxzG3y8I/jxA3zWP+T/8aCpTpkyZ0q9c
        7j9kJV1MAMSzhAAAAABJRU5ErkJggg==
</value>
  </data>
</root>